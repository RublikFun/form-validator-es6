"use strict";var Answer=function(t){this.ranges={},this.required={},this.restrictions={},this.container=t,this.value={},this.validations=[],this.init()};Answer.prototype={init:function(){this.setRanges(),this.setRequired(),this.setRestrictions(),this.formatValue(),this.setChange(this.container)},setValidation:function(t){return"boolean"==typeof t?void this.validations.push(t):void(this.validations=[])},getValidation:function(){var t,i=!0;for(t=0;t<this.validations.length;t++)if(this.validations[t]===!1){i=!1;break}return i},setRanges:function(){var t=this;$(this.container).each(function(){t.ranges[$(this).data("field")]={max:$(this).data("max")||!1,min:$(this).data("min")||!1}})},setRequired:function(){var t=this;$(this.container).each(function(){$(this).data("required")===!1?t.required[$(this).data("field")]=!1:t.required[$(this).data("field")]=!0})},setRestrictions:function(){var t=this;$(this.container).each(function(){$(this).data("numeric")===!0?t.restrictions[$(this).data("field")]="numeric":t.restrictions[$(this).data("field")]=!1})},setChange:function(t){var i=this;t.on("change",function(){i.callbackCheck(),i.formatValue()})},setCallbackChange:function(t){var i,e=this;i=t.filter(function(){return e.hasField(this)?this:void 0}),$(i).on("change",function(){e.formatValue()})},unsetChange:function(t){var i,e=this;i=t.filter(function(){return e.hasField(this)?this:void 0}),$(i).off("change")},callbackCheck:function(){var t=this;$(this.container).each(function(){t.checkForCallback($(this))})},formatValue:function(t){var i=this,e=t||!1;$(this.container).each(function(){e&&i.clearValue($(this)),i.trackValue($(this))})},trackValue:function(t){var i=t.data("grouping");void 0!==i?this.trackDimensionalValue(t,i):$.extend(this.value,this.formattedValue(t))},trackDimensionalValue:function(t,i){this.value[i]=void 0===this.value[i]?{}:this.value[i],$.extend(this.value[i],this.formattedValue(t))},formattedValue:function(t){var i={},e=t.data("field");return i[e]=this.getDefault(t),this.hasValue(t)?(i[e]=this.getValueOrDefault(t),this.removeError(e),i):this.shouldOverwrite(t)?(i[e]=this.getDefault(t),i):void 0},getValueOrDefault:function(t){var i=t.val();return""===i&&(i=this.getDefault(t)),i},getDefault:function(t){var i="";return void 0!==t.data("default")&&(i=t.data("default")),i},deleteValue:function(t){var i=this;$(t).each(function(){delete i.value[$(this).data("field")]})},checkForCallback:function(t){return this.hasValue(t)?this.revealCallback(t):this.revertCallback(t)},revealCallback:function(t){var i=$("."+t.data("callback")),e=this;i.length>0&&(i.each(function(){e.hasField(this)&&e.addAnswer($(this))}),i.addClass("active"))},revertCallback:function(t){var i=$("."+t.data("callback"));i.length>0&&(this.clearValue(i),this.removeAnswer(i),i.removeClass("active"))},hasValue:function(t){return this.isValidInput(t)||this.isValidCheckbox(t)||this.isValidSelect(t)},shouldOverwrite:function(t){return this.isDuplicate(t)&&this.isFirst(t)||!this.isDuplicate(t)},isDuplicate:function(t){return $('[data-field="'+t.data("field")+'"]').length>1},isFirst:function(t){return 0===$('[data-field="'+t.data("field")+'"]').index(t)},clearValue:function(t){this.isValidInput(t)&&t.val(""),t.prop("checked",!1),t.find("option").prop("selected",!1)},hasField:function(t){return $(t).data("field")?!0:!1},addError:function(t){$('[data-field="'+t+'"]').addClass("js-error")},removeError:function(t){$('[data-field="'+t+'"]').removeClass("js-error")},isValid:function(){this.setValidation();for(var t in this.value){var i=this.value[t];if("object"==typeof i){var e=this.checkGroupValidity(i);this.setValidation(e)}else{var e=this.checkIndividualValidity(t,i);this.setValidation(e)}}return this.getValidation()},checkGroupValidity:function(t){var i=!0;for(var e in t)i=this.checkIndividualValidity(e,t[e]);return i},checkIndividualValidity:function(t,i){var e=this.validatePresence(t,i)&&this.validateContent(t,i);return e&&this.removeError(t),e},validatePresence:function(t,i){return this.isPresent(t,i)?!0:(this.addError(t),!1)},validateContent:function(t,i){return this.isNumericallyValid(t,i)&&this.isInRange(t,i)?!0:(this.addError(t),!1)},isValidInput:function(t){return"text"===t.attr("type")?!0:!1},isValidCheckbox:function(t){return t.prop("checked")?!0:!1},isValidSelect:function(t){return"SELECT"===t[0].tagName&&t.val()?!0:!1},isNumericallyValid:function(t,i){var e=void 0!==this.restrictions;return e&&"numeric"===this.restrictions[t]?this.isNumeric(i):!0},isNumeric:function(t){return isNaN(Number(t))?!1:!0},isAbove:function(t,i){var e=this.ranges[t].min;return e?this.isNumeric(i)&&i>=e:!0},isBelow:function(t,i){var e=this.ranges[t].max;return e?this.isNumeric(i)&&e>=i:!0},isPresent:function(t,i){return this.required[t]===!1||""!==i},isInRange:function(t,i){return void 0===this.ranges[t]?!0:this.isAbove(t,i)&&this.isBelow(t,i)},addAnswer:function(t){this.container=this.container.add(t),this.setCallbackChange(t),this.setRanges(),this.setRequired()},removeAnswer:function(t){this.container=this.container.not(t),this.unsetChange(t),this.setRanges(),this.required={},this.setRequired(),this.deleteValue(t)}};var Answers=function(){this.privateValue={},this.all=[]};Answers.prototype={createAnswer:function(t){var i=new Answer(t);return this.all.push(i),i},getRecord:function(){return this.report(),this.privateValue},setRecord:function(t){this.privateValue=t},validateAll:function(){for(var t=0;t<this.all.length;t++)this.all[t].isValid()},report:function(){for(var t=0;t<this.all.length;t++)$.extend(this.privateValue,this.all[t].value);return this.privateValue},resetAll:function(){for(var t=0;t<this.all.length;t++)this.all[t].formatValue(!0);this.report()}};var Scene=function(t){return this.container=t,this.bound=!1,this};Scene.prototype={setCallback:function(){var t=arguments.length<=0||void 0===arguments[0]?!1:arguments[0],i=arguments.length<=1||void 0===arguments[1]?!1:arguments[1];return this.callback=t,this.args=i,this},setScript:function(t){return this.script=t||void 0,this},setButton:function(){var t=arguments.length<=0||void 0===arguments[0]?".js-button":arguments[0];return this.button=this.findButton(t),this},setAnswer:function(){var t=arguments.length<=0||void 0===arguments[0]?".js-answer":arguments[0];return this.answerClass=t,this},bindClicks:function(){var t=this;this.button.each(function(){t.bindClick($(this))})},init:function(t){var i=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];this.setCallback(i.callback,i.callbackArgs).setScript(t).setButton(i.button).setAnswer(i.answer).createAnswers().bindClicks()},createAnswers:function(){if(void 0===this.script)return this.answer=new Answer(this.container.find(this.answerClass)),this;var t=this.container.find(this.answerClass);return this.answer=this.script.answers.createAnswer(t),this},findButton:function(t){return void 0!==t?this.container.find(t):this.container.find(".js-button")},show:function(){this.container.addClass("active")},hide:function(){this.container.removeClass("active")},shake:function(){this.container.addClass("js-error")},unshake:function(){this.container.removeClass("js-error")},handleCallback:function(){var t="function"==typeof this.args?this.args():this.args;this.callback&&this.callback(t)},finalize:function(){return this.unshake(),void 0!==this.script&&this.script.next(),this.handleCallback(),!0},validate:function(){return this.answer.isValid(),$(this.answer.container).hasClass("js-error")?(this.shake(),!1):void this.finalize()},bindClick:function(t){var i=this;t.click(function(){i.validate()}),this.bound=!0},destroy:function(){this.hide(),delete this.answers,delete this}};var Script=function(t){var i=arguments.length<=1||void 0===arguments[1]?!0:arguments[1];return this.container=t||$(".js-script"),this.scenes=[],this.current=0,this.answers=new Answers,i&&this.init().start(),this};Script.prototype={setFinished:function(t,i){return this.onFinished=t||!1,this.args=i||!1,this},setScene:function(t){return this.sceneClass=t||".js-scene",this},setButton:function(t){return this.buttonClass=t||".js-button",this},setAnswer:function(t){return this.answerClass=t||".js-answer",this},makeScenes:function(t){void 0!==this.answers&&(t.answers=this.answers);var i=this;return this.container.find(this.sceneClass).each(function(){i.addScene($(this),t)}),this},init:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return this.setFinished(t.onFinished,t.onFinishedArgs).setScene(t.scene).setButton(t.button).setAnswer(t.answer).makeScenes(t),this},addScene:function(t,i){var e=new Scene(t);e.init(this,i),this.scenes.push(e)},removeScene:function(){this.scenes.pop().destroy()},addAt:function(t,i,e){var n=new Scene(i);n.init(this,e),this.scenes.splice(t,0,n)},removeAt:function(t){this.scenes.splice(t,1)[0].destroy()},previous:function(){return this.scenes[this.current].hide(),this.current>0?(this.untick(),!0):void this.start()},next:function(){return this.scenes[this.current].hide(),this.scenes.length-1>this.current?(this.tick(),!0):void this.finish()},tick:function(){this.current+=1,this.scenes[this.current].show()},untick:function(){this.current-=1,this.scenes[this.current].show()},handleFunction:function(t,i){t.call(this,i)},handleArray:function(){this.formatArgsArray();for(var t=0;t<this.onFinished.length;t++)this.onFinished[t].call(this,this.args[t])},formatArgsArray:function(){"object"!=typeof this.args&&(this.args=new Array(this.args))},finish:function(){if(this.container.addClass("finished"),this.onFinished){if("function"==typeof this.onFinished)return void this.handleFunction(this.onFinished,this.args);this.handleArray()}},start:function(){this.current=0,this.scenes[this.current].show(),this.container.addClass("started")},restart:function(){this.answers.resetAll(),this.container.removeClass("finished"),this.start()},addCallbackToScene:function(t,i,e){var n=this.scenes[t];n.args=e,n.callback=i.bind(n)}};
!function(e,o){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?o(e,!0):function(e){if(!e.document)throw new Error("requires a window with a document");return o(e)}:o(e)}("undefined"!=typeof window?window:this,function(e,o){return"undefined"==typeof o&&(e.Script=Script),Script});
//# sourceMappingURL=data:application/json;base64,